// Mocks generated by Mockito 5.4.4 from annotations
// in edu_platform_demo/test/presentation/view_model/detail/course_detail_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:edu_platform_demo/domain/model/course.dart' as _i2;
import 'package:edu_platform_demo/domain/model/lecture.dart' as _i5;
import 'package:edu_platform_demo/domain/repository/course_detail_repository.dart'
    as _i3;
import 'package:edu_platform_demo/domain/repository/enrollment_repository.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCourse_0 extends _i1.SmartFake implements _i2.Course {
  _FakeCourse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CourseDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCourseDetailRepository extends _i1.Mock
    implements _i3.CourseDetailRepository {
  MockCourseDetailRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Course> getCourse(int? courseId) => (super.noSuchMethod(
        Invocation.method(
          #getCourse,
          [courseId],
        ),
        returnValue: _i4.Future<_i2.Course>.value(_FakeCourse_0(
          this,
          Invocation.method(
            #getCourse,
            [courseId],
          ),
        )),
      ) as _i4.Future<_i2.Course>);

  @override
  _i4.Future<List<_i5.Lecture>> getLectures({
    required int? courseId,
    int? offset = 0,
    int? count = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLectures,
          [],
          {
            #courseId: courseId,
            #offset: offset,
            #count: count,
          },
        ),
        returnValue: _i4.Future<List<_i5.Lecture>>.value(<_i5.Lecture>[]),
      ) as _i4.Future<List<_i5.Lecture>>);
}

/// A class which mocks [EnrollmentRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnrollmentRepository extends _i1.Mock
    implements _i6.EnrollmentRepository {
  MockEnrollmentRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> toggleEnrollment(int? courseId) => (super.noSuchMethod(
        Invocation.method(
          #toggleEnrollment,
          [courseId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isEnrolled(int? courseId) => (super.noSuchMethod(
        Invocation.method(
          #isEnrolled,
          [courseId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
